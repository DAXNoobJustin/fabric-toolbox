# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

parameters:
- name: source_workspace
  displayName: Enter source workspace
  type: string
  default: ''

- name: target_workspace
  displayName: Enter target workspace name
  type: string
  default: ''

- name: copy_lakehouse_data
  displayName: Copy Lakehouse Data (enter True or False)
  type: string
  default: 'False'

- name: copy_warehouse_data
  displayName: Copy Warehouse Data (enter True or False)
  type: string
  default: 'False'

- name: create_lakehouse_shortcuts
  displayName: Create lakehouse shortcuts (only if copy lakehouse data set to False)
  type: string
  default: 'True'

- name: developer_email
  displayName: Enter developer email
  type: string
  default: ''

- name: capacity_id
  displayName: Enter capacity ID of the new workspace
  type: string
  default: ''


- name: ado_branch
  displayName: Enter the source branch name
  type: string
  default: 'main'

- name: ado_git_folder
  displayName: Folder in the repo where the Fabric content is stored. Leave as / if content is stored in root. 
  type: string
  default: "/"

- name: connections_from_to
  displayName: Swap connections in pipelines using names or IDs in the format (from,to) format. Leave as () if no connections to swap.
  type: string
  default: "()"

variables:
- group: Fabric_Deployment_Group_S
- group: Fabric_Deployment_Group_NS

pool:
  name: Azure Pipelines

stages:
 - stage: CreateWorkspace
   jobs:
    - job: 'BranchOut'
      steps:
      
          - script: pip install requests
            displayName: 'Install requests'
          - script: pip install msal
            displayName: 'Install msal'
          - script: |
              echo Add other tasks to build, test, and deploy your project.
              echo See https://aka.ms/yaml

          - task: PythonScript@0
            inputs:
              scriptSource: 'filePath'
              scriptPath: 'scripts/BranchOut-Feature-Workspace-Automation.py'
              arguments: '--ADO_ORG_NAME $(ADO_ORG_NAME) --ADO_REPO_NAME $(ADO_REPO_NAME) --ADO_PROJECT_NAME $(ADO_PROJECT_NAME) --ADO_NEW_BRANCH ${{ parameters.target_workspace}} --DEVELOPER ${{ parameters.developer_email }} --WORKSPACE_NAME ${{ parameters.target_workspace }} --CAPACITY_ID ${{ parameters.capacity_id }} --ADO_API_URL $(ADO_API_URL) --ADO_MAIN_BRANCH ${{ parameters.ado_branch }} --ADO_GIT_FOLDER ${{ parameters.ado_git_folder }} --TENANT_ID $(TENANT_ID) --FABRIC_TOKEN $(fabrictoken) --ADO_PAT_TOKEN $(azdopat) --CLIENT_ID $(azclientid) --USER_NAME $(username) --PASSWORD $(password)'
              #failOnStderr: true 
            displayName: 'Run Branch-Out-To-New-Workspace Script'

          - task: PythonScript@0
            inputs:
              scriptSource: 'filePath'
              scriptPath: 'scripts/Run_post_activity.py'
              arguments:  '--FABRIC_TOKEN $(fabrictoken) --NOTEBOOK_WORKSPACE_ID $(NOTEBOOK_WORKSPACE_ID) --NOTEBOOK_ID $(NOTEBOOK_ID) --SOURCE_WORKSPACE ${{ parameters.source_workspace }} --TARGET_WORKSPACE ${{ parameters.target_workspace }}  --TENANT_ID $(TENANT_ID) --COPY_LAKEHOUSE ${{ parameters.copy_lakehouse_data }} --COPY_WAREHOUSE ${{ parameters.copy_warehouse_data }} --CREATE_SHORTCUTS ${{ parameters.create_lakehouse_shortcuts }} --USER_NAME $(username) --PASSWORD $(password) --CLIENT_ID $(azclientid) --CONNECTIONS_FROM_TO ${{ parameters.connections_from_to }}'
              #failOnStderr: true 
            displayName: 'Invoke Fabric Post Activity Job'

              