pool:

  vmImage: ubuntu-20.04

name: release pipeline

variables:
  - group: GroupFabricWorkspaces
  - group: GroupDevOps
  - group: DynamicGroup

trigger: none  # Disable CI trigger for direct pushes

pr:
  branches:
    include:
      - main  # Trigger only when there is a PR targeting the dev branch
      
  
stages:

  - stage: stage1 
    displayName: 'Stage 1 - Get and set feature branch'

    jobs:

    - job: get_set_feature_branch
      displayName: 'Get and set feature branch'

      steps:

        # Using the task syntax
        - task: PowerShell@2
          displayName: "Get the feature branch name"
          name: "get_feature_branch_name"
          inputs: 
            targetType: inline
            script: |

              $FEATURE_BRANCH_TEMP = $env:SYSTEM_PULLREQUEST_SOURCEBRANCH
              $FEATURE_BRANCH = $FEATURE_BRANCH_TEMP -replace 'refs/heads/', ''
              Write-Host "Feature branch is: $FEATURE_BRANCH"
              Write-Host "##vso[task.setvariable variable=FEATURE_BRANCH;isOutput=true;]$FEATURE_BRANCH"

        - task: AzureCLI@2
          displayName: "Set the feature branch name in DynamicGroup"
          name: "set_feature_branch_name"
          inputs:
            azureSubscription: 'ME-MngEnvMCAP471958-rsayegh-1(cdc2b911-3053-4dc6-a4f1-e979614c7cfd)' # Replace with your Azure DevOps service connection name
            scriptType: pscore
            scriptLocation: inlineScript
            inlineScript: |
              $organisationUrl = "$(System.TeamFoundationCollectionUri)"
              $project = "$(System.TeamProject)"
              $variableGroupName = "DynamicGroup"
              $variableName = "FeatureBranch"
              $variableValue = "$(get_feature_branch_name.FEATURE_BRANCH)"

              # Get Variable Group ID
              $variableGroupId = $(az pipelines variable-group list --organization $organisationUrl --project $project --query "[?name=='$variableGroupName'].id" --output tsv)

              if (-not $variableGroupId) {
                  Write-Host "##vso[task.logissue type=error]Variable group '$variableGroupName' not found"
                  exit 1
              }

              # Update the variable in the Variable Group
              az pipelines variable-group variable update `
                --organization $organisationUrl `
                --project $project `
                --group-id $variableGroupId `
                --name $variableName `
                --value $variableValue

              Write-Host "Successfully updated $variableName in $variableGroupName"
          env:
            AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)              


        